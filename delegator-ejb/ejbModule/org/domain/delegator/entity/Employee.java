package org.domain.delegator.entity;

// Generated 00:56:58 13/09/2009 by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "dropdb")
public class Employee implements java.io.Serializable {

	private int eid;
	private String userName;
	private String name;
	private String jobDesc;
	private String lname;
	private Date bdate;
	private String address;
	private String email;
	private Integer phoneNum;
	private String auth;
	private Integer password;
	private Set<Tasks> taskses = new HashSet<Tasks>(0);
	private Late late;
	private Set<Employee> employeesForManagerId = new HashSet<Employee>(0);
	private OnTime onTime;
	private Set<Divisions> divisionses = new HashSet<Divisions>(0);
	private Set<Employee> employeesForEid = new HashSet<Employee>(0);
	private Set<Archived> archiveds = new HashSet<Archived>(0);
	private Set<Divisions> divisionses_1 = new HashSet<Divisions>(0);
	private Set<DoneBy> doneBies = new HashSet<DoneBy>(0);
	private Set<Archived> archiveds_1 = new HashSet<Archived>(0);

	public Employee() {
	}

	public Employee(int eid, String userName, String name, String jobDesc,
			String auth) {
		this.eid = eid;
		this.userName = userName;
		this.name = name;
		this.jobDesc = jobDesc;
		this.auth = auth;
	}

	public Employee(int eid, String userName, String name, String jobDesc,
			String lname, Date bdate, String address, String email,
			Integer phoneNum, String auth, Integer password,
			Set<Tasks> taskses, Late late, Set<Employee> employeesForManagerId,
			OnTime onTime, Set<Divisions> divisionses,
			Set<Employee> employeesForEid, Set<Archived> archiveds,
			Set<Divisions> divisionses_1, Set<DoneBy> doneBies,
			Set<Archived> archiveds_1) {
		this.eid = eid;
		this.userName = userName;
		this.name = name;
		this.jobDesc = jobDesc;
		this.lname = lname;
		this.bdate = bdate;
		this.address = address;
		this.email = email;
		this.phoneNum = phoneNum;
		this.auth = auth;
		this.password = password;
		this.taskses = taskses;
		this.late = late;
		this.employeesForManagerId = employeesForManagerId;
		this.onTime = onTime;
		this.divisionses = divisionses;
		this.employeesForEid = employeesForEid;
		this.archiveds = archiveds;
		this.divisionses_1 = divisionses_1;
		this.doneBies = doneBies;
		this.archiveds_1 = archiveds_1;
	}

	@Id
	@Column(name = "EId", unique = true, nullable = false)
	@NotNull
	public int getEid() {
		return this.eid;
	}

	public void setEid(int eid) {
		this.eid = eid;
	}

	@Column(name = "UserName", nullable = false)
	@NotNull
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "Name", nullable = false)
	@NotNull
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "JobDesc", nullable = false)
	@NotNull
	public String getJobDesc() {
		return this.jobDesc;
	}

	public void setJobDesc(String jobDesc) {
		this.jobDesc = jobDesc;
	}

	@Column(name = "LName")
	public String getLname() {
		return this.lname;
	}

	public void setLname(String lname) {
		this.lname = lname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Bdate", length = 10)
	public Date getBdate() {
		return this.bdate;
	}

	public void setBdate(Date bdate) {
		this.bdate = bdate;
	}

	@Column(name = "Address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "Email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PhoneNum")
	public Integer getPhoneNum() {
		return this.phoneNum;
	}

	public void setPhoneNum(Integer phoneNum) {
		this.phoneNum = phoneNum;
	}

	@Column(name = "Auth", nullable = false, length = 15)
	@NotNull
	@Length(max = 15)
	public String getAuth() {
		return this.auth;
	}

	public void setAuth(String auth) {
		this.auth = auth;
	}

	@Column(name = "Password")
	public Integer getPassword() {
		return this.password;
	}

	public void setPassword(Integer password) {
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Tasks> getTaskses() {
		return this.taskses;
	}

	public void setTaskses(Set<Tasks> taskses) {
		this.taskses = taskses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employee")
	public Late getLate() {
		return this.late;
	}

	public void setLate(Late late) {
		this.late = late;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "works_for", catalog = "dropdb", joinColumns = { @JoinColumn(name = "Eid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ManagerId", nullable = false, updatable = false) })
	public Set<Employee> getEmployeesForManagerId() {
		return this.employeesForManagerId;
	}

	public void setEmployeesForManagerId(Set<Employee> employeesForManagerId) {
		this.employeesForManagerId = employeesForManagerId;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employee")
	public OnTime getOnTime() {
		return this.onTime;
	}

	public void setOnTime(OnTime onTime) {
		this.onTime = onTime;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<Divisions> getDivisionses() {
		return this.divisionses;
	}

	public void setDivisionses(Set<Divisions> divisionses) {
		this.divisionses = divisionses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "works_for", catalog = "dropdb", joinColumns = { @JoinColumn(name = "ManagerId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Eid", nullable = false, updatable = false) })
	public Set<Employee> getEmployeesForEid() {
		return this.employeesForEid;
	}

	public void setEmployeesForEid(Set<Employee> employeesForEid) {
		this.employeesForEid = employeesForEid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Archived> getArchiveds() {
		return this.archiveds;
	}

	public void setArchiveds(Set<Archived> archiveds) {
		this.archiveds = archiveds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Divisions> getDivisionses_1() {
		return this.divisionses_1;
	}

	public void setDivisionses_1(Set<Divisions> divisionses_1) {
		this.divisionses_1 = divisionses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<DoneBy> getDoneBies() {
		return this.doneBies;
	}

	public void setDoneBies(Set<DoneBy> doneBies) {
		this.doneBies = doneBies;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<Archived> getArchiveds_1() {
		return this.archiveds_1;
	}

	public void setArchiveds_1(Set<Archived> archiveds_1) {
		this.archiveds_1 = archiveds_1;
	}

}
